server:
  port: 7006  #该 Module 的端口号
eureka:
  instance:
    #eureka服务端的实例名称，
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
  client:
    should-enforce-registration-at-init: false # client 在初始化阶段是否强行注册到注册中心
    register-with-eureka: true #false表示不向注册中心注册自己。
    fetch-registry: true #false表示自己端就是注册中心，我的职责就是维护服务实例，并不需要去检索服务
    healthcheck:
      enabled: true  # 开启健康检查（需要spring-boot-starter-actuator依赖）
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
# Spring Boot 2.50对 actuator 监控屏蔽了大多数的节点，只暴露了 heath 节点，本段配置（*）就是为了开启所有的节点
management:
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"   # * 在yaml 文件属于关键字，所以需要加引号
spring:
  cloud:
    gateway: #网关路由配置
      routes:
        #将 micro-service-cloud-provider-dept-8001 提供的服务隐藏起来，不暴露给客户端，只给客户端暴露 API 网关的地址 9527
        - id: sys-user   #路由 id,没有固定规则，但唯一，建议与服务名对应
#          uri: http://localhost:8001          #匹配后提供服务的路由地址
          uri: lb://SYS-USER # 动态路由
          predicates:
            #以下是断言条件，必选全部符合条件
            - Path=/user/**               #断言，路径匹配 注意：Path 中 P 为大写
            - Method=GET #只能时 GET 请求时，才能访问
        - id: sys-user   #路由 id,没有固定规则，但唯一，建议与服务名对应
          uri: lb://SYS-USER # 动态路由
          predicates:
            - Path=/apps/**               #断言，路径匹配 注意：Path 中 P 为大写
          filters:
              - PrefixPath=/eureka #在请求路径前面加上 /eureka
