server:
  port: 8080  #该 Module 的端口号
spring:
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  # 集成knife4j，Failed to start bean ‘documentationPluginsBootstrapper‘；导致系统不能正常启动
  cloud:
    sentinel:
      transport:
        port: 8719
        #        dashboard: 127.0.0.1:8080
        dashboard: 10.0.0.210:7004
  # 集成SpringBoot Admin
  boot:
    admin:
      client:
        url: http://127.0.0.1:7005
        instance:
          prefer-ip: true # 必须设置为true，否则可能注册失败，true：server才能端拿到本机IP
          register-once: false # false：如果有多个server端，都会就行注册，true:只在一个server端注册
  security:
    user:
      name: admin
      password: admin
eureka:
  instance:
    hostname: 127.0.0.1
    port: 7001
    #eureka服务端的实例名称，
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
  client:
    should-enforce-registration-at-init: false # client 在初始化阶段是否强行注册到注册中心
    register-with-eureka: true #false表示不向注册中心注册自己。
    fetch-registry: true #false表示自己端就是注册中心，我的职责就是维护服务实例，并不需要去检索服务
    healthcheck:
      enabled: true  # 开启健康检查（需要spring-boot-starter-actuator依赖）
    service-url:
      defaultZone: http://localhost:7001/eureka/
#      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/
#      defaultZone: http://${EUREKA_USER:admin}:${EUREKA_PASS:admin}@127.0.0.1:7001/eureka
#      defaultZone: http://10.0.0.210:7001/eureka
###################################
# Spring Boot 2.50对 actuator 监控屏蔽了大多数的节点，只暴露了 heath 节点，本段配置（*）就是为了开启所有的节点
management:
  info:
    env:
      # Spring Boot 2.6 后 默认为false
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"   # * 在yaml 文件属于关键字，所以需要加引号
# springdoc-openapi项目配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: nohi.ms
# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  setting:
    language: zh_cn
# feign 配置
feign:
  client:
    config:
      # 默认为所有的feign client做配置(注意和上例github-client是同级的)
      default:
        connect-Timeout: 5000                        # 连接超时时间
        readTimeout: 5000                           # 读超时时间设置
  sentinel:
    enabled: true
    # sentinel 降级配置 feign.sentinel.degrade
    degrade:
      rules:
        - resource: POST:http://localhost:8001/users/lists
          coutnt: 10
          degradeGrad: 2
          timeWindow: 1
          minRequestAmount: 5
# 日志
logging:
  maxhistory: 7
  level:
    nohi.ms.common: INFO
  path: ${HOME}/logs/${spring.application.name}




